// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	httpreswriter "github.com/tidepool-org/tide-whisperer/api/httpreswriter"
)

// HandlerLoggerFunc is an autogenerated mock type for the HandlerLoggerFunc type
type HandlerLoggerFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *HandlerLoggerFunc) Execute(_a0 context.Context, _a1 *httpreswriter.HttpResponseWriter) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *httpreswriter.HttpResponseWriter) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewHandlerLoggerFuncT interface {
	mock.TestingT
	Cleanup(func())
}

// NewHandlerLoggerFunc creates a new instance of HandlerLoggerFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHandlerLoggerFunc(t NewHandlerLoggerFuncT) *HandlerLoggerFunc {
	mock := &HandlerLoggerFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
