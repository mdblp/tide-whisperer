// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	bytes "bytes"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Uploader is an autogenerated mock type for the Uploader type
type Uploader struct {
	mock.Mock
}

// Upload provides a mock function with given fields: ctx, filename, buffer
func (_m *Uploader) Upload(ctx context.Context, filename string, buffer *bytes.Buffer) error {
	ret := _m.Called(ctx, filename, buffer)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *bytes.Buffer) error); ok {
		r0 = rf(ctx, filename, buffer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewUploaderT interface {
	mock.TestingT
	Cleanup(func())
}

// NewUploader creates a new instance of Uploader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUploader(t NewUploaderT) *Uploader {
	mock := &Uploader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
